# -*- Mode:Org; Coding:utf-8; fill-column:158 -*-
# ######################################################################################################################################################.H.S.##
# FILE:        ColorSchemes.org
#+TITLE:       MRaster Color Schemes
#+AUTHOR:      Mitch Richling
#+EMAIL:       https://www.mitchr.me/
#+DATE:        2022-07-31
#+DESCRIPTION: DESCRIPTION FIXME
#+KEYWORDS:    KEYWORDS FIXME
#+LANGUAGE:    en
#+OPTIONS:     num:t toc:nil \n:nil @:t ::t |:t ^:nil -:t f:t *:t <:t skip:nil d:nil todo:t pri:nil H:5 p:t author:t html-scripts:nil
#+SEQ_TODO:    TODO:NEW(t)                         TODO:WORK(w)    TODO:HOLD(h)    | TODO:FUTURE(f)   TODO:DONE(d)    TODO:CANCELED(c)
#+PROPERTY: header-args :eval never-export
#+HTML_HEAD: <style>body { width: 95%; margin: 2% auto; font-size: 18px; line-height: 1.4em; font-family: Georgia, serif; color: black; background-color: white; }</style>
#+HTML_HEAD: <style>body { min-width: 500px; max-width: 1024px; }</style>
#+HTML_HEAD: <style>h1,h2,h3,h4,h5,h6 { color: #A5573E; line-height: 1em; font-family: Helvetica, sans-serif; }</style>
#+HTML_HEAD: <style>h1,h2,h3 { line-height: 1.4em; }</style>
#+HTML_HEAD: <style>h1.title { font-size: 3em; }</style>
#+HTML_HEAD: <style>.subtitle { font-size: 0.6em; }</style>
#+HTML_HEAD: <style>h4,h5,h6 { font-size: 1em; }</style>
#+HTML_HEAD: <style>.org-src-container { border: 1px solid #ccc; box-shadow: 3px 3px 3px #eee; font-family: Lucida Console, monospace; font-size: 80%; margin: 0px; padding: 0px 0px; position: relative; }</style>
#+HTML_HEAD: <style>.org-src-container>pre { line-height: 1.2em; padding-top: 1.5em; margin: 0.5em; background-color: #404040; color: white; overflow: auto; }</style>
#+HTML_HEAD: <style>.org-src-container>pre:before { display: block; position: absolute; background-color: #b3b3b3; top: 0; right: 0; padding: 0 0.2em 0 0.4em; border-bottom-left-radius: 8px; border: 0; color: white; font-size: 100%; font-family: Helvetica, sans-serif;}</style>
#+HTML_HEAD: <style>pre.example { white-space: pre-wrap; white-space: -moz-pre-wrap; white-space: -o-pre-wrap; font-family: Lucida Console, monospace; font-size: 80%; background: #404040; color: white; display: block; padding: 0em; border: 2px solid black; }</style>
#+HTML_LINK_HOME: https://www.mitchr.me/
#+HTML_LINK_UP: https://richmit.github.io/mraster/index.html
# ######################################################################################################################################################.H.E.##

#+ATTR_HTML: :border 2 solid #ccc :frame hsides :align center
| Copyright \copy {{{time(%Y)}}} Mitch Richling. All rights reserved. |

#+TOC: headlines 5

#        #         #         #         #         #         #         #         #         #         #         #         #         #         #         #         #
#        #         #         #         #         #         #         #         #         #         #         #         #         #         #         #         #         #         #         #         #         #         #         #         #         #         #         #         #         #
#   010  #    020  #    030  #    040  #    050  #    060  #    070  #    080  #    090  #    100  #    110  #    120  #    130  #    140  #    150  #    160  #    170  #    180  #    190  #    200  #    210  #    220  #    230  #    240  #    250  #    260  #    270  #    280  #    290  #
# 345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890
#        #         #         #         #         #         #         #         #         #         #         #         #         #         #         #       | #         #         #         #         #         #         #         #         #         #         #         #         #         #
#        #         #         #         #         #         #         #         #         #         #         #         #         #         #         #       | #         #         #         #         #         #         #         #         #         #         #         #         #         #

# To get org to evaluate all code blocks on export, add the following to the Emacs header on the first line of this file:
#     org-export-babel-evaluate:t; org-confirm-babel-evaluate:nil
#
# C-c C-x C-v (org-toggle-inline-images)
#

* Introduction
:PROPERTIES:
:CUSTOM_ID: introduction
:END:

*=MRaster=* provides access to a rich collection of color schemes.  Color schemes are exposed in the API as inner classes of the =colorTpl= class.  These
inner classes follow a regular naming convention:

  - [[#csCB][=csCB ..........=]] RGB Color Brewer 2 (template: =csCB_tpl=
  - [[#csFPmisc][=csFP ..........=]] RGB Fixed pallets (template: =csFP_tpl=
  - [[#csWS][=csWS ..........=]] RGB Web safe colors (template: =csFP_tpl=)
  - [[#csCCdiag][=csCCdiag ......=]] RGB color cube: diagonal gradients (template: =csCC_tpl=)
  - [[#csCCcons][=csCCcons ......=]] RGB color cube: Gradients with constant brightness (template: =csCC_tpl=)
  - [[#csCColde][=csCColde ......=]] RGB color cube: Some classic color gradients (template: =csCC_tpl=)
  - [[#csCCud][=csCCud ........=]] RGB color cube: Two color up-down ramps (template: =csCC_tpl=)
  - [[#csCCdiv][=csCCdiv .......=]] RGB color cube: Three Segment Diverging Maps (template: =csCC_tpl=)
  - [[#csCCsum][=csCCSum .......=]] RGB color cube: Sum ramp (template: =csCC_tpl=)
  - [[#csCCu][=csCCu .........=]] RGB color cube: Gradients from black to another corner (template: =csCC_tpl=)
  - [[#csCCwic][=csCCwic ......=]] RGB color cube: White In Center Circular Gradients (template: =csCC_tpl=)
  - [[#csCCfractal][=csCCfractal ...=]] RGB color cube: Common gradient schemes used for fractals (template: =csCC_tpl=)
  - [[#csHSLh][=csHSLh ........=]] RGB color cube: Gradients from the cube center to a corner (template: =csHSLh_tpl=)
  - [[#csBin][=csBin .........=]] RGB Binary Schemes (template: =csCC_tpl=)
  - [[#csPGrey][=csPGrey .......=]] RGB Pseudo-greyscale
  - [[#csRainbow][=csRainbow .....=]] RGB spectrum based colors
  - [[#csCH][=csCH ..........=]] RGB Cubehelix colors (template: =csCubeHelix_tpl=)
  - [[#csBin][=csBin .........=]] Defined by parametric polynomial curves in the RGB color cube. (template: =csPLY_tpl=)

These classes are static in nature, and an instance is not required to use them.  They all have members named "=c=" which can set the color of an existing
=colorTpl= instance (a "setter") or create a brand new instance (a "factory").

When used as a factory, color scheme classes return fully constructed =colorTpl= objects:

#+begin_src c++
mjr:color3c8b aColor = mjr::color3c8b::webSafeNormalVision.c(25);
#+end_src

Alternately, color scheme classes may set the components of a passed  =colorTpl=  instance:

#+begin_src c++
mjr::color3c8b aColor;
mjr::color3c8b::webSafeNormalVision.c(aColor, 25);
#+end_src

Color scheme classes may also be used by =colorTpl= methods to identify a color scheme.  For example, the =csSet= method can set the current object's
components based on a color scheme like so:

#+begin_src c++
mjr::color3c8b aColor;
aColor.csSet<mjr::color3c8b::webSafeNormalVision>(25);
#+end_src

** Color Scheme Class Interface
:PROPERTIES:
:CUSTOM_ID: class-interface
:END:

Not all color scheme classes have the same interface; however, the interfaces are uniformly designed:
  - *=numC=:* The number of colors available in the scheme
    - Color schemes with a fixed number of colors at compile time have member =numC=
    - Color schemes with the number of colors set at run time, will have a =numC= argument for the =c= methods.
      - These schemes have two members specifying the range for =numC=: =minNumC= & =maxNumC=.
  - *=c=:* methods are used to set colors
    - The =c= methods come in pairs:
      - A =colorTpl= factory methodand that takes one or more arguments identifying the color within the color scheme
        - The first argument is the color scheme selector used to select a color from the scheme:
          - *=csIntType csIdx=:* An integer "index" for descrete color schemes (like Colorbrewer schemes)
          - *=csFltType csX=:*   A floating point value in [0, 1] used to select colors from continuous schemes (like gradiants)
          - *=csNatType csVal=:* A =csFltType= or =csIntType= depending on the =clrChanT=.  Used as described above.
          - *=colorTpl  csCol=:* A color object to be converted to a color.  See the =csHSLh*= schemes as an example.
          - *=typename  csG=:*   A generic color selector used in a template
        - The remaining arguments are generally used to specify some characterstic of the scheme itself.  Examples:
          - A =numC= argument specifying the number of elements in a discrete scheme (like Colorbrewer schemes)
          - The color match function based rainbow color schemes take an argument =interpMethod= specifiying an interpolation method. is
      - A method that takes a =colorTpl= as it's first argument, with the remaining arguments as in the factory method form of =c=.
    - It is entirely possilbe that a color scheme object may have more than two =c= methods.  For example, =csCC*= color schemes have a pair of =c= methods
      taking integer color selectors and another pair taking a floating point color selectors.

Many color schemes provide a number of colors that is a function of =chanStepMax=, which is directly related to the value of =clrChanT=.  For integral
=clrChanT= types, =chanStepMax= will be equal to =maxChanVal=. For floating point =clrChanT= types, =chanStepMax= will be equal to $2^{31}$.

* Color Cube Edge/Diagonal Graph Color Schemes
:PROPERTIES:
:CUSTOM_ID: cc-intro
:END:

#+begin_src text
 The RGB Color Cube                                       _________________________
                                                   green / _____________________  /| yellow
                                                        / / ___________________/ / |
                                                       / / /| |               / /  |
                                                      / / / | |              / / . |
                                                     / / /| | |             / / /| |
                                                    / / / | | |            / / / | |
                                                   / / /  | | |     white / / /| | |
                                                  / /_/__________________/ / / | | |
                                                 /________________________/ /  | | |
 Vertexes and Center of the Cube:           cyan | ______________________ | |  | | |
 Name     R     G     B     Abriv                | | |    | | |_________| | |__| | |
 black    0.0   0.0   0.0   0                    | | |    | |___________| | |____| |
 blue     0.0   0.0   1.0   b                    | | |   / / ___________| | |_  / / red
 green    0.0   1.0   0.0   g                    | | |  / / /           | | |/ / /
 red      1.0   0.0   0.0   r                    | | | / / /  black     | | | / /
 yellow   1.0   1.0   0.0   y                    | | |/ / /             | | |/ /
 cyan     0.0   1.0   1.0   c                    | | | / /              | | ' /
 magenta  1.0   0.0   1.0   m                    | | |/_/_______________| |  /
 white    1.0   1.0   1.0   w                    | |____________________| | /
 grey50   0.5   0.5   0.5   h               blue |________________________|/ magenta
#+end_src

The RGB color cube is usually considered as part of the 3D Euclidean space $\mathbb{R}^3$ -- that is $R$, $G$, & $B$ are real values in $I=[0, 1]$.  This
subset of $\mathbb{R}^3$ is frequently called the "unit cube" and denoted by $I^3$.  A gradient in this context is a continuous curve, $c:I\rightarrow I^3$,
from one point in the cube to another.  In this way we define an infinite sequence of colors.  The most popular gradients are straight lines connecting two
colors together.  The next most popular is a pairwise linear curve connecting several colors together -- usually with each linear component the same length.

Digital images are most commonly represented with integer values for $R$, $G$, & $B$.  Most commonly unsigned, 8-bit integers -- $0.0$ mapping to $0$ and
$1.0$ mapping to $255$.  In this scenario one might think of the RGB color space as a discrete set of $16777216$ values, and color gradients as finite
sequences of discrete "steps" from one discrete color value to another.  For example, a linear gradient from "green" to "yellow" will have precisely $256$
unique steps when the color space is defined in terms of 8-bit, integer color channels.  Note that a linear gradient from "green" to "magenta", across the
diagonal of the cube, will also have $256$ color steps -- one of the oddities of distance measurement the discrete RGB space!  Lastly, note that if we had a
gradient from "green" through "yellow" and ending at "red", we would have have $511$ distinct colors.  So discreet RGB color spaces produce discreet
gradients, and the number of colors in the gradient will differ depending on the points traversed.

The corners of the color cube are by far the most popular choices for gradient control points.  In describing these gradients it is usefully to think about
the corners and how we can connect them as a mathematical graph.

The edges of the cube taken with the corners as vertexes form a graph (referred to as "the cube edge graph" in this documentation).  Every trail (a walk with
unique edges) with $n$ edges generates a color scheme with $\mathrm{maxChanVal}\cdot n - 1$ unique colors.  To make this scheme unique, we define the tree to
have one of its end points the "start" of the scheme -- so we can map the integers from $[0,\mathrm{maxChanVal}\cdot n]$ to unique colors.

Example:

#+BEGIN_QUOTE
    ="BCG"= defines a trail starting at =B= (blue), moving to =C= (cyan) next, and ending at =G= (green).  The color scheme has $0$ mapped to blue (the first
    vertex), $256$ mapped to cyan (the second vertex), and $511$ mapped to green (the final vertex).  For values between two vertex points, we linearly
    interpolate between the two values.
#+END_QUOTE

If we expand the graph to also include edges between the diagonal points of each face (cyan to yellow for example), we have a larger graph with more options.
This graph is referred to as "the face edge/diagonal graph" in this documentation.

Lastly, we can expand that graph by adding one vertex, called =h=, at the center of the cube with edges extending to each corner.  This graph is referred to
as "complete cube graph with center" in this documentation.

Every color scheme in this section can be created via the =cmpRGBcornerDGradiant()= method of =colorTpl=; however, many are also available as predefined color
scheme objects.  The color schemes provided by the =csCC_tpl= template provide a dual interface.  One provides a discreet view of gradients (the =c= methods
with =csIdx= arguments), and the other provides a continuous view of gradients (the =c= methods with =csX= arguments).  When the colors use floating point
channels, the discreet gradients have $2^{31}$ steps between corner colors.

** Maximal circuits in the cube edge graph
:PROPERTIES:
:CUSTOM_ID: cc-max-e-circ
:END:

This is one of the most commonly seen color schemes in scientific visualization.  The color cube rainbow map is generated by the unique six segment (6 vertex)
cycle in the face edge graph not involving white or black:

  - =RYGCBMR= -- =csCColdeRainbow=

*** Predefined Schemes
:PROPERTIES:
:CUSTOM_ID: csCColdeRainbow
:END:

  - =csCColdeRainbow= :: \\
    [[./pics/cs/color_lut_docs_csCColdeRainbow_50.png]]

** Maximal circuits in the cube edge/diagonal graph
:PROPERTIES:
:CUSTOM_ID: cc-max-ed-circ
:END:

If we expand to the edge face/diagonal graph, then we have may more six segment cycles not involving white or black:

  - =RBCGYMR=
  - =RBCMYGR=
  - =RBGCMYR=
  - =RBGCYMR=
  - =RBGYCMR=
  - =RBMCGYR=
  - =RBMCYGR=
  - =RBMYCGR=
  - =RGBCMYR=
  - =RGBCYMR=
  - =RGBMCYR=
  - =RGCBMYR=
  - =RGYCBMR=
  - =RMBGCYR=
  - =RMCBGYR=

** Hitting all the corners
:PROPERTIES:
:CUSTOM_ID: cc-corners
:END:

A common request is for a cycle in the face edge graph that uses every corner color of the RGB cube.  Not only do we have one, but 6 uniquely different ones
-- not counting rearrangements or reversals:

  - =0BCGYWMR0=
  - =0BCWMRYG0=
  - =0BMRYWCG0=
  - =0BMWCGYR0=
  - =0GCBMWYR0=
  - =0GYWCBMR0=

** Large Trees
:PROPERTIES:
:CUSTOM_ID: cc-big-trees
:END:

Another common request is for trees (so no color is used twice) starting at black and ending at white.  Several trees exist of lengths of 7 and 5:

  - =0BCGYRMW=
  - =0BMRYGCW=
  - =0GCBMRYW=
  - =0GYRMBCW=
  - =0RMBCGYW=
  - =0RYGCBMW=
  - =0BCGYW=
  - =0BMRYW=
  - =0GCBMW=
  - =0GYRMW=
  - =0RMBCW=
  - =0RYGCW=

** Black to White in Three Trees
:PROPERTIES:
:CUSTOM_ID: cc-bw-trees
:END:

The three segment trees from black to white are useful in that the intensity (sum of the components) is a monotone increasing function from zero up to three.
One of them (=0RYW=) is often called the "fire ramp" as it ranges from black (flame base), up to yellow, then red, and finally to white hot.

  - =0BCW= -- =csCCsumBGR=
  - =0BMW= -- =csCCsumBRG=
  - =0GCW= -- =csCCsumGBR=
  - =0GYW= -- =csCCsumGRB=
  - =0RMW= -- =csCCsumRBG=
  - =0RYW= -- =csCCsumRGB= & =csCColdeFireRamp=

*** Predefined Schemes
:PROPERTIES:
:CUSTOM_ID: csCCsum
:END:

  - =csCCsumBGR= :: \\
    [[./pics/cs/color_lut_docs_csCCsumBGR_50.png]]
  - =csCCsumBRG= :: \\
    [[./pics/cs/color_lut_docs_csCCsumBRG_50.png]]
  - =csCCsumGBR= :: \\
    [[./pics/cs/color_lut_docs_csCCsumGBR_50.png]]
  - =csCCsumGRB= :: \\
    [[./pics/cs/color_lut_docs_csCCsumGRB_50.png]]
  - =csCCsumRBG= :: \\
    [[./pics/cs/color_lut_docs_csCCsumRBG_50.png]]
  - =csCCsumRGB= & =csCColdeFireRamp= :: \\
    [[./pics/cs/color_lut_docs_csCCsumRGB_50.png]]

** Black to Corner in One Trees
:PROPERTIES:
:CUSTOM_ID: cc-bc1-trees
:END:

These minimal trees go from black to a corner of the cube -- not much of a tree!!  Still, they are exceedingly common in applications, and thus have
predefined color schemes.

  - =0W= -- =csCCu0W=
  - =0R= -- =csCCu0R=
  - =0B= -- =csCCu0B=
  - =0G= -- =csCCu0G=
  - =0C= -- =csCCu0C=
  - =0M= -- =csCCu0M=
  - =0Y= -- =csCCu0Y=

*** Predefined Schemes
:PROPERTIES:
:CUSTOM_ID: csCCu
:END:

  - =csCCu0W= :: \\
    [[./pics/cs/color_lut_docs_csCCu0W_50.png]]
  - =csCCu0R= :: \\
    [[./pics/cs/color_lut_docs_csCCu0R_50.png]]
  - =csCCu0B= :: \\
    [[./pics/cs/color_lut_docs_csCCu0B_50.png]]
  - =csCCu0G= :: \\
    [[./pics/cs/color_lut_docs_csCCu0G_50.png]]
  - =csCCu0C= :: \\
    [[./pics/cs/color_lut_docs_csCCu0C_50.png]]
  - =csCCu0M= :: \\
    [[./pics/cs/color_lut_docs_csCCu0M_50.png]]
  - =csCCu0Y= :: \\
    [[./pics/cs/color_lut_docs_csCCu0Y_50.png]]

** White In Center Circular Gradients
:PROPERTIES:
:CUSTOM_ID: cc-wic-cycles
:END:

These three node cycles start and end with a primary or secondary color, and have white in the center.  They are usefull for highlighting one segment of a
circular data set -- for example highlighting a sector of angles on a circle.  As such they find application in complex number argument plots.
  
  - =RWR= -- =csCCwicR=
  - =GWG= -- =csCCwicG=
  - =BWB= -- =csCCwicB=
  - =MWM= -- =csCCwicM=
  - =YWY= -- =csCCwicY=
  - =CWC= -- =csCCwicC=

*** Predefined Schemes
:PROPERTIES:
:CUSTOM_ID: csCCwic
:END:

  - =csCCwicR= :: \\
    [[./pics/cs/color_lut_docs_csCCwicR_50.png]]
  - =csCCwicG= :: \\
    [[./pics/cs/color_lut_docs_csCCwicG_50.png]]
  - =csCCwicB= :: \\
    [[./pics/cs/color_lut_docs_csCCwicB_50.png]]
  - =csCCwicM= :: \\
    [[./pics/cs/color_lut_docs_csCCwicM_50.png]]
  - =csCCwicY= :: \\
    [[./pics/cs/color_lut_docs_csCCwicY_50.png]]
  - =csCCwicC= :: \\
    [[./pics/cs/color_lut_docs_csCCwicC_50.png]]

** Luminance based color schemes
:PROPERTIES:
:CUSTOM_ID: lum
:END:

Luminance based color schemes defined as color gradients from the center of the in the HSL color space to an extreem vertex are quite popular.  Many of the
most popular luminance based color schemes in the HSL color space are also edge graphs in the RGB color cube!  Of particular note, are the two segment trees
from black to white in the RGB edge/diagonal graph -- they are the same as the two segment graphs in the edges of the HSL hexcone from black to white!

  - =0RW= -- =H=000= -- red edge of the HSL hexcone
  - =0YW= -- =H=060= -- yellow edge of the HSL hexcone
  - =0GW= -- =H=120= -- green edge of the HSL hexcone
  - =0CW= -- =H=180= -- cyan edge of the HSL hexcone
  - =0BW= -- =H=240= -- blue edge of the HSL hexcone
  - =0MW= -- =H=300= -- magenta edge of the HSL hexcone

** Hot Too Cold
:PROPERTIES:
:CUSTOM_ID: cc-h-t-c
:END:

A very common color map used to map data with ranges from cold up to hot is known as the "cold too hot ramp".  This ramp provides colors from blue, up through
green, and ends in red. It suffers from the same defects as the color cube rainbow; however, its use is so common that special support is provided via a named
method.

  - =BCGYR= -- =csCColdeColdToHot=

The traditional cold to hot ramp can be improved -- this is my personal opinion.  This new ramp still has the same problems the color cube rainbow has;
however, it is more attractive.  This one moves from white (ice), up to water (blue), and then up to red (hot) via yellow.

  - =WCBYR= -- =csCColdeIceToWaterToHot=

*** Predefined Schemes
:PROPERTIES:
:CUSTOM_ID: csCColde
:END:

  - =csCColdeColdToHot= :: \\
    [[./pics/cs/color_lut_docs_csCColdeColdToHot_50.png]]
  - =csCColdeIceToWaterToHot= :: \\
    [[./pics/cs/color_lut_docs_csCColdeIceToWaterToHot_50.png]]


** Common Fractal Color Graphs
:PROPERTIES:
:CUSTOM_ID: cc-fractal-trees
:END:

These color schemes have no special cycle/tree/graph structure at all, but they are commonly used to color fractals.  Common enough that I have included
predefined schemes for them.

  - =0RYBCW= -- =csCCfractal0RYBCW=
  - =YR=     -- =csCCfractalYR=
  - =YB=     -- =csCCfractalYB=

*** Predefined Schemes
:PROPERTIES:
:CUSTOM_ID: csCCfractal
:END:

  - =csCCfractal0RYBCW= :: \\
    [[./pics/cs/color_lut_docs_csCCfractal0RYBCW_50.png]]
  - =csCCfractalYR= :: \\
    [[./pics/cs/color_lut_docs_csCCfractalYR_50.png]]
  - =csCCfractalYB= :: \\
    [[./pics/cs/color_lut_docs_csCCfractalYB_50.png]]

** Constant Intensity Cycles
:PROPERTIES:
:CUSTOM_ID: cc-cons
:END:

Two cycles, with three edges each, exhibiting constant intensity for every color in the color scheme are genuinely useful.  They have the advantage that they
always render a "bright" color.  The lower intensity version is best for projected media that don't do well with yellow.

  - =CMY= -- =csCCconsTwo= -- intensity == 2
  - =BRG= -- =csCCconsOne= -- intensity == 1

*** Predefined Schemes
:PROPERTIES:
:CUSTOM_ID: csCCcons
:END:

  - =csCCconsTwo= :: \\
    [[./pics/cs/color_lut_docs_csCCconsTwo_50.png]]
  - =csCCconsOne= :: \\
    [[./pics/cs/color_lut_docs_csCCconsOne_50.png]]

** One Segment Diverging Maps
:PROPERTIES:
:CUSTOM_ID: cc-div-1
:END:

One edge trees in the face diagonal graph with a nearly constant intensity of 2 along the entire edge are useful for "diverging" or "bipolar" color schemes.
By definition, such color schemes will never involve black or white.

While rarely used, the following maps are useful and suggested.  None of them have the problems associated with the color cube rainbow.

  - =YC= -- =csCCudBr=
  - =YM= -- =csCCudBg=
  - =MC= -- =csCCudGr=
  - =MY= -- =csCCudGb=
  - =CM= -- =csCCudRg=
  - =CY= -- =csCCudRb=

The naming convention for the methods is not obvious.  Take, for example, setRGBcmpUpDownRampBr.  This is so named because of the computational algorithm used
to compute the scheme: Blue up, red down, green constant (maxChanVal).

*** Predefined Schemes
:PROPERTIES:
:CUSTOM_ID: csCCud
:END:

  - =csCCudBr= :: \\
    [[./pics/cs/color_lut_docs_csCCudBr_50.png]]
  - =csCCudBg= :: \\
    [[./pics/cs/color_lut_docs_csCCudBg_50.png]]
  - =csCCudGr= :: \\
    [[./pics/cs/color_lut_docs_csCCudGr_50.png]]
  - =csCCudGb= :: \\
    [[./pics/cs/color_lut_docs_csCCudGb_50.png]]
  - =csCCudRg= :: \\
    [[./pics/cs/color_lut_docs_csCCudRg_50.png]]
  - =csCCudRb= :: \\
    [[./pics/cs/color_lut_docs_csCCudRb_50.png]]

** Three Segment Diverging Maps
:PROPERTIES:
:CUSTOM_ID: cc-div-3
:END:

Some three edge trees utilizing very different colors for starting and terminal points can form very nice "divergent" color maps.  Such maps can successfully
illustrate variables with both positive and negative values or two mutually exclusive, opposing variables.  Only two are directly supported via named methods
(selected for attractiveness):

  - =BWR= -- intensity between 1 and 3
  - =CWM= -- intensity between 2 and 3

*** Predefined Schemes
:PROPERTIES:
:CUSTOM_ID: csCCdiv
:END:

  - =csCCdivBWR= :: \\
    [[./pics/cs/color_lut_docs_csCCdivBWR_50.png]]
  - =csCCdivCWM= :: \\
    [[./pics/cs/color_lut_docs_csCCdivCWM_50.png]]

** Center point ramps (HSL schemes)
:PROPERTIES:
:CUSTOM_ID: cc-h-rmp
:END:

Color schemes defined as gradients from the center of the HSL color space to an extreme edge are mostly perceptually linear.  These are also one segment trees
in the complete cube graph with center.  Recall that we call the vertex at the center of the cube "=H=" -- for "Half way between everything". Using this new
vertex, we have the following saturation based color schemes:

  - =HR= -- =csHSLhR=
  - =HG= -- =csHSLhG=
  - =HB= -- =csHSLhB=
  - =HC= -- =csHSLhC=
  - =HY= -- =csHSLhY=
  - =HM= -- =csHSLhM=

*** Predefined Schemes
:PROPERTIES:
:CUSTOM_ID: csHSLh
:END:

  - =csHSLhR= :: \\
    [[./pics/cs/color_lut_docs_csHSLhR_50.png]]
  - =csHSLhG= :: \\
    [[./pics/cs/color_lut_docs_csHSLhG_50.png]]
  - =csHSLhB= :: \\
    [[./pics/cs/color_lut_docs_csHSLhB_50.png]]
  - =csHSLhC= :: \\
    [[./pics/cs/color_lut_docs_csHSLhC_50.png]]
  - =csHSLhY= :: \\
    [[./pics/cs/color_lut_docs_csHSLhY_50.png]]
  - =csHSLhM= :: \\
    [[./pics/cs/color_lut_docs_csHSLhM_50.png]]

** Stacked HSL Schemes
:PROPERTIES:
:CUSTOM_ID: cc-stack-hsl
:END:

The diagonal traversals (diagonal meaning through the center of the cube) are essentially two of the HSL saturation based schemes placed back to back.  Aside
from the black-white one, these can form effective divergent color schemes.

  - =CR= -- =csCCdiagCR=
  - =MG= -- =csCCdiagMG=
  - =YB= -- =csCCdiagYB=
  - =0W= -- =csCCdiag01=

*** Predefined Schemes
:PROPERTIES:
:CUSTOM_ID: csCCdiag
:END:

  - =csCCdiagCR= :: \\
    [[./pics/cs/color_lut_docs_csCCdiagCR_50.png]]
  - =csCCdiagMG= :: \\
    [[./pics/cs/color_lut_docs_csCCdiagMG_50.png]]
  - =csCCdiagYB= :: \\
    [[./pics/cs/color_lut_docs_csCCdiagYB_50.png]]
  - =csCCdiag01= :: \\
    [[./pics/cs/color_lut_docs_csCCdiag01_50.png]]

* Continuous Polynomial Schemes
:PROPERTIES:
:CUSTOM_ID: csPLY
:END:

These schemes are "continuous" in that they take a floating point value to select the color, and are derived from continuous polynomial curves in the RGB cube
space.  Many of them are very similar, but not necessarily identical, to color maps in popular use (with similar names).  In particular, the maps here may not
be as precise when it comes to things like monotonously of intensity.  That said these look nice and I like easy to compute color maps that don't require
fancy interpolating schemes.

  - =csPLYgrey= :: \\
    [[./pics/cs/color_lut_docs_csPLYgrey_50.png]]
  - =csPLYquad= :: \\
    [[./pics/cs/color_lut_docs_csPLYquad_50.png]]
  - =csPLYinferno= :: \\
    [[./pics/cs/color_lut_docs_csPLYinferno_50.png]]
  - =csPLYmagma= :: \\
    [[./pics/cs/color_lut_docs_csPLYmagma_50.png]]
  - =csPLYparula= :: \\
    [[./pics/cs/color_lut_docs_csPLYparula_50.png]]
  - =csPLYplasma= :: \\
    [[./pics/cs/color_lut_docs_csPLYplasma_50.png]]
  - =csPLYturbo= :: \\
    [[./pics/cs/color_lut_docs_csPLYturbo_50.png]]
  - =csPLYviridis= :: \\
    [[./pics/cs/color_lut_docs_csPLYviridis_50.png]]
  - =csPLYcividis= :: \\
    [[./pics/cs/color_lut_docs_csPLYcividis_50.png]]
  - =csPLYhsvRB= :: \\
    [[./pics/cs/color_lut_docs_csPLYhsvRB_50.png]]

* Dave Green's cubehelix color maps
:PROPERTIES:
:CUSTOM_ID: csCH
:END:

The =csCubeHelix_tpl= templte can geneate any of the cubehelix schemes, but =colorTpl= predefines three I particularly like:

  - =csCHstd= :: \\
    [[./pics/cs/color_lut_docs_csCHstd_50.png]]
  - =csCHblu= :: \\
    [[./pics/cs/color_lut_docs_csCHblu_50.png]]
  - =csCHvio= :: \\
    [[./pics/cs/color_lut_docs_csCHvio_50.png]]

* Pseudo-Greyscale
:PROPERTIES:
:CUSTOM_ID: csPGrey
:END:

These schemes are not true greyscale, but the colors are very close to grey.  These schemes are discreet!

  - =csPGrey3x= :: \\
    [[./pics/cs/color_lut_docs_csPGrey3x_50.png]]
  - =csPGrey4x= :: \\
    [[./pics/cs/color_lut_docs_csPGrey4x_50.png]]

* Spectral
:PROPERTIES:
:CUSTOM_ID: csRainbow
:END:

These color schemes are based on the spectrum and color match functions.  These aren't really suitable for visualization, but some interesting color schemes
can be derived from them.

  - =csRainbowLA= :: \\
    [[./pics/cs/color_lut_docs_csRainbowLA_50.png]]
  - =csRainbowCM= with =BUMP= :: \\
    [[./pics/cs/color_lut_docs_csRainbowCMb_50.png]]
  - =csRainbowCM= with =LINEAR= :: \\
    [[./pics/cs/color_lut_docs_csRainbowCMl_50.png]]
  - =csRainbowCM= with =FLOOR= :: \\
    [[./pics/cs/color_lut_docs_csRainbowCMf_50.png]]
  - =csRainbowCM= with =CEILING= :: \\
    [[./pics/cs/color_lut_docs_csRainbowCMc_50.png]]
  - =csRainbowCM= with =NEAREST= :: \\
    [[./pics/cs/color_lut_docs_csRainbowCMn_50.png]]

* Color Brewer
:PROPERTIES:
:CUSTOM_ID: csCB
:END:

The discreet schemes in this section are all from the =colorbrewer2= collection:
#+BEGIN_QUOTE
Credit: Brewer, Cynthia A., 2022. http://www.ColorBrewer.org2, 2022-07-30.
#+END_QUOTE
Most of these schemes can provide a variable number of steps from 3 up to what is illustrated in each color swatch below.  Also note that =colorTpl= provides
a continuous gradient version of each color scheme -- which is kinda weird, but I like some of them.
  - =csCBAccent= (3-8) :: \\
    =03= [[./pics/cs/color_lut_docs_csCBAccent_03_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBAccentC_03_50.png]] \\
    =04= [[./pics/cs/color_lut_docs_csCBAccent_04_50.png]] \\
    =--= [[./pics/cs/color_lut_docs_csCBAccentC_04_50.png]] \\
    =05= [[./pics/cs/color_lut_docs_csCBAccent_05_50.png]] \\
    =--= [[./pics/cs/color_lut_docs_csCBAccentC_05_50.png]] \\
    =06= [[./pics/cs/color_lut_docs_csCBAccent_06_50.png]] \\
    =--= [[./pics/cs/color_lut_docs_csCBAccentC_06_50.png]] \\
    =07= [[./pics/cs/color_lut_docs_csCBAccent_07_50.png]] \\
    =--= [[./pics/cs/color_lut_docs_csCBAccentC_07_50.png]] \\
    =08= [[./pics/cs/color_lut_docs_csCBAccent_08_50.png]] \\
    =--= [[./pics/cs/color_lut_docs_csCBAccentC_08_50.png]]
  - =csCBBlues= (3-9) :: \\
    =03= [[./pics/cs/color_lut_docs_csCBBlues_03_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBBluesC_03_50.png]] \\
    =04= [[./pics/cs/color_lut_docs_csCBBlues_04_50.png]] \\
    =--= [[./pics/cs/color_lut_docs_csCBBluesC_04_50.png]] \\
    =05= [[./pics/cs/color_lut_docs_csCBBlues_05_50.png]] \\
    =--= [[./pics/cs/color_lut_docs_csCBBluesC_05_50.png]] \\
    =06= [[./pics/cs/color_lut_docs_csCBBlues_06_50.png]] \\
    =--= [[./pics/cs/color_lut_docs_csCBBluesC_06_50.png]] \\
    =07= [[./pics/cs/color_lut_docs_csCBBlues_07_50.png]] \\
    =--= [[./pics/cs/color_lut_docs_csCBBluesC_07_50.png]] \\
    =08= [[./pics/cs/color_lut_docs_csCBBlues_08_50.png]] \\
    =--= [[./pics/cs/color_lut_docs_csCBBluesC_08_50.png]] \\
    =09= [[./pics/cs/color_lut_docs_csCBBlues_09_50.png]] \\
    =--= [[./pics/cs/color_lut_docs_csCBBluesC_09_50.png]]
  - =csCBBrBG= (3-11) :: \\
    =03= [[./pics/cs/color_lut_docs_csCBBrBG_03_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBBrBGC_03_50.png]] \\
    =04= [[./pics/cs/color_lut_docs_csCBBrBG_04_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBBrBGC_04_50.png]] \\
    =05= [[./pics/cs/color_lut_docs_csCBBrBG_05_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBBrBGC_05_50.png]] \\
    =06= [[./pics/cs/color_lut_docs_csCBBrBG_06_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBBrBGC_06_50.png]] \\
    =07= [[./pics/cs/color_lut_docs_csCBBrBG_07_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBBrBGC_07_50.png]] \\
    =08= [[./pics/cs/color_lut_docs_csCBBrBG_08_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBBrBGC_08_50.png]] \\
    =09= [[./pics/cs/color_lut_docs_csCBBrBG_09_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBBrBGC_09_50.png]] \\
    =10= [[./pics/cs/color_lut_docs_csCBBrBG_10_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBBrBGC_10_50.png]] \\
    =11= [[./pics/cs/color_lut_docs_csCBBrBG_11_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBBrBGC_11_50.png]] \\
  - =csCBBuGn= (3-9) :: \\
    =03= [[./pics/cs/color_lut_docs_csCBBuGn_03_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBBuGnC_03_50.png]] \\
    =04= [[./pics/cs/color_lut_docs_csCBBuGn_04_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBBuGnC_04_50.png]] \\
    =05= [[./pics/cs/color_lut_docs_csCBBuGn_05_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBBuGnC_05_50.png]] \\
    =06= [[./pics/cs/color_lut_docs_csCBBuGn_06_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBBuGnC_06_50.png]] \\
    =07= [[./pics/cs/color_lut_docs_csCBBuGn_07_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBBuGnC_07_50.png]] \\
    =08= [[./pics/cs/color_lut_docs_csCBBuGn_08_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBBuGnC_08_50.png]] \\
    =09= [[./pics/cs/color_lut_docs_csCBBuGn_09_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBBuGnC_09_50.png]]
  - =csCBBuPu= (3-9) :: \\
    =03= [[./pics/cs/color_lut_docs_csCBBuPu_03_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBBuPuC_03_50.png]] \\
    =04= [[./pics/cs/color_lut_docs_csCBBuPu_04_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBBuPuC_04_50.png]] \\
    =05= [[./pics/cs/color_lut_docs_csCBBuPu_05_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBBuPuC_05_50.png]] \\
    =06= [[./pics/cs/color_lut_docs_csCBBuPu_06_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBBuPuC_06_50.png]] \\
    =07= [[./pics/cs/color_lut_docs_csCBBuPu_07_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBBuPuC_07_50.png]] \\
    =08= [[./pics/cs/color_lut_docs_csCBBuPu_08_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBBuPuC_08_50.png]] \\
    =09= [[./pics/cs/color_lut_docs_csCBBuPu_09_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBBuPuC_09_50.png]]
  - =csCBDark2= (3-8) :: \\
    =03= [[./pics/cs/color_lut_docs_csCBDark2_03_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBDark2C_03_50.png]] \\
    =04= [[./pics/cs/color_lut_docs_csCBDark2_04_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBDark2C_04_50.png]] \\
    =05= [[./pics/cs/color_lut_docs_csCBDark2_05_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBDark2C_05_50.png]] \\
    =06= [[./pics/cs/color_lut_docs_csCBDark2_06_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBDark2C_06_50.png]] \\
    =07= [[./pics/cs/color_lut_docs_csCBDark2_07_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBDark2C_07_50.png]] \\
    =08= [[./pics/cs/color_lut_docs_csCBDark2_08_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBDark2C_08_50.png]]
  - =csCBGnBu= (3-9) :: \\
    =03= [[./pics/cs/color_lut_docs_csCBGnBu_03_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBGnBuC_03_50.png]] \\
    =04= [[./pics/cs/color_lut_docs_csCBGnBu_04_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBGnBuC_04_50.png]] \\
    =05= [[./pics/cs/color_lut_docs_csCBGnBu_05_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBGnBuC_05_50.png]] \\
    =06= [[./pics/cs/color_lut_docs_csCBGnBu_06_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBGnBuC_06_50.png]] \\
    =07= [[./pics/cs/color_lut_docs_csCBGnBu_07_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBGnBuC_07_50.png]] \\
    =08= [[./pics/cs/color_lut_docs_csCBGnBu_08_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBGnBuC_08_50.png]] \\
    =09= [[./pics/cs/color_lut_docs_csCBGnBu_09_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBGnBuC_09_50.png]]
  - =csCBGreens= (3-9) :: \\
    =03= [[./pics/cs/color_lut_docs_csCBGreens_03_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBGreensC_03_50.png]] \\
    =04= [[./pics/cs/color_lut_docs_csCBGreens_04_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBGreensC_04_50.png]] \\
    =05= [[./pics/cs/color_lut_docs_csCBGreens_05_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBGreensC_05_50.png]] \\
    =06= [[./pics/cs/color_lut_docs_csCBGreens_06_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBGreensC_06_50.png]] \\
    =07= [[./pics/cs/color_lut_docs_csCBGreens_07_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBGreensC_07_50.png]] \\
    =08= [[./pics/cs/color_lut_docs_csCBGreens_08_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBGreensC_08_50.png]] \\
    =09= [[./pics/cs/color_lut_docs_csCBGreens_09_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBGreensC_09_50.png]]
  - =csCBGreys= (3-9) :: \\
    =03= [[./pics/cs/color_lut_docs_csCBGreys_03_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBGreysC_03_50.png]] \\
    =04= [[./pics/cs/color_lut_docs_csCBGreys_04_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBGreysC_04_50.png]] \\
    =05= [[./pics/cs/color_lut_docs_csCBGreys_05_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBGreysC_05_50.png]] \\
    =06= [[./pics/cs/color_lut_docs_csCBGreys_06_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBGreysC_06_50.png]] \\
    =07= [[./pics/cs/color_lut_docs_csCBGreys_07_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBGreysC_07_50.png]] \\
    =08= [[./pics/cs/color_lut_docs_csCBGreys_08_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBGreysC_08_50.png]] \\
    =09= [[./pics/cs/color_lut_docs_csCBGreys_09_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBGreysC_09_50.png]]
  - =csCBOranges= (3-9) :: \\
    =03= [[./pics/cs/color_lut_docs_csCBOranges_03_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBOrangesC_03_50.png]] \\
    =04= [[./pics/cs/color_lut_docs_csCBOranges_04_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBOrangesC_04_50.png]] \\
    =05= [[./pics/cs/color_lut_docs_csCBOranges_05_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBOrangesC_05_50.png]] \\
    =06= [[./pics/cs/color_lut_docs_csCBOranges_06_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBOrangesC_06_50.png]] \\
    =07= [[./pics/cs/color_lut_docs_csCBOranges_07_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBOrangesC_07_50.png]] \\
    =08= [[./pics/cs/color_lut_docs_csCBOranges_08_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBOrangesC_08_50.png]] \\
    =09= [[./pics/cs/color_lut_docs_csCBOranges_09_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBOrangesC_09_50.png]]
  - =csCBOrRd= (3-9) :: \\
    =03= [[./pics/cs/color_lut_docs_csCBOrRd_03_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBOrRdC_03_50.png]] \\
    =04= [[./pics/cs/color_lut_docs_csCBOrRd_04_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBOrRdC_04_50.png]] \\
    =05= [[./pics/cs/color_lut_docs_csCBOrRd_05_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBOrRdC_05_50.png]] \\
    =06= [[./pics/cs/color_lut_docs_csCBOrRd_06_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBOrRdC_06_50.png]] \\
    =07= [[./pics/cs/color_lut_docs_csCBOrRd_07_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBOrRdC_07_50.png]] \\
    =08= [[./pics/cs/color_lut_docs_csCBOrRd_08_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBOrRdC_08_50.png]] \\
    =09= [[./pics/cs/color_lut_docs_csCBOrRd_09_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBOrRdC_09_50.png]]
  - =csCBPaired= (3-12) :: \\
    =03= [[./pics/cs/color_lut_docs_csCBPaired_03_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPairedC_03_50.png]] \\
    =04= [[./pics/cs/color_lut_docs_csCBPaired_04_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPairedC_04_50.png]] \\
    =05= [[./pics/cs/color_lut_docs_csCBPaired_05_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPairedC_05_50.png]] \\
    =06= [[./pics/cs/color_lut_docs_csCBPaired_06_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPairedC_06_50.png]] \\
    =07= [[./pics/cs/color_lut_docs_csCBPaired_07_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPairedC_07_50.png]] \\
    =08= [[./pics/cs/color_lut_docs_csCBPaired_08_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPairedC_08_50.png]] \\
    =09= [[./pics/cs/color_lut_docs_csCBPaired_09_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPairedC_09_50.png]] \\
    =10= [[./pics/cs/color_lut_docs_csCBPaired_10_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPairedC_10_50.png]] \\
    =11= [[./pics/cs/color_lut_docs_csCBPaired_11_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPairedC_11_50.png]] \\
    =12= [[./pics/cs/color_lut_docs_csCBPaired_12_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPairedC_12_50.png]]
  - =csCBPastel1= (3-9) :: \\
    =03= [[./pics/cs/color_lut_docs_csCBPastel1_03_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPastel1C_03_50.png]] \\
    =04= [[./pics/cs/color_lut_docs_csCBPastel1_04_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPastel1C_04_50.png]] \\
    =05= [[./pics/cs/color_lut_docs_csCBPastel1_05_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPastel1C_05_50.png]] \\
    =06= [[./pics/cs/color_lut_docs_csCBPastel1_06_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPastel1C_06_50.png]] \\
    =07= [[./pics/cs/color_lut_docs_csCBPastel1_07_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPastel1C_07_50.png]] \\
    =08= [[./pics/cs/color_lut_docs_csCBPastel1_08_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPastel1C_08_50.png]] \\
    =09= [[./pics/cs/color_lut_docs_csCBPastel1_09_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPastel1C_09_50.png]]
  - =csCBPastel2= (3-9) :: \\
    =03= [[./pics/cs/color_lut_docs_csCBPastel2_03_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPastel2C_03_50.png]] \\
    =04= [[./pics/cs/color_lut_docs_csCBPastel2_04_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPastel2C_04_50.png]] \\
    =05= [[./pics/cs/color_lut_docs_csCBPastel2_05_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPastel2C_05_50.png]] \\
    =06= [[./pics/cs/color_lut_docs_csCBPastel2_06_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPastel2C_06_50.png]] \\
    =07= [[./pics/cs/color_lut_docs_csCBPastel2_07_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPastel2C_07_50.png]] \\
    =08= [[./pics/cs/color_lut_docs_csCBPastel2_08_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPastel2C_08_50.png]] \\
    =09= [[./pics/cs/color_lut_docs_csCBPastel2_09_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPastel2C_09_50.png]]
  - =csCBPiYG= (3-11) :: \\
    =03= [[./pics/cs/color_lut_docs_csCBPiYG_03_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPiYGC_03_50.png]] \\
    =04= [[./pics/cs/color_lut_docs_csCBPiYG_04_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPiYGC_04_50.png]] \\
    =05= [[./pics/cs/color_lut_docs_csCBPiYG_05_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPiYGC_05_50.png]] \\
    =06= [[./pics/cs/color_lut_docs_csCBPiYG_06_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPiYGC_06_50.png]] \\
    =07= [[./pics/cs/color_lut_docs_csCBPiYG_07_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPiYGC_07_50.png]] \\
    =08= [[./pics/cs/color_lut_docs_csCBPiYG_08_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPiYGC_08_50.png]] \\
    =09= [[./pics/cs/color_lut_docs_csCBPiYG_09_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPiYGC_09_50.png]] \\
    =10= [[./pics/cs/color_lut_docs_csCBPiYG_10_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPiYGC_10_50.png]] \\
    =11= [[./pics/cs/color_lut_docs_csCBPiYG_11_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPiYGC_11_50.png]] 
  - =csCBPRGn= (3-11) :: \\
    =03= [[./pics/cs/color_lut_docs_csCBPRGn_03_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPRGnC_03_50.png]] \\
    =04= [[./pics/cs/color_lut_docs_csCBPRGn_04_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPRGnC_04_50.png]] \\
    =05= [[./pics/cs/color_lut_docs_csCBPRGn_05_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPRGnC_05_50.png]] \\
    =06= [[./pics/cs/color_lut_docs_csCBPRGn_06_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPRGnC_06_50.png]] \\
    =07= [[./pics/cs/color_lut_docs_csCBPRGn_07_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPRGnC_07_50.png]] \\
    =08= [[./pics/cs/color_lut_docs_csCBPRGn_08_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPRGnC_08_50.png]] \\
    =09= [[./pics/cs/color_lut_docs_csCBPRGn_09_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPRGnC_09_50.png]] \\
    =10= [[./pics/cs/color_lut_docs_csCBPRGn_10_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPRGnC_10_50.png]] \\
    =11= [[./pics/cs/color_lut_docs_csCBPRGn_11_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPRGnC_11_50.png]] 
  - =csCBPuBuGn= (3-9) :: \\
    =03= [[./pics/cs/color_lut_docs_csCBPuBuGn_03_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPuBuGnC_03_50.png]] \\
    =04= [[./pics/cs/color_lut_docs_csCBPuBuGn_04_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPuBuGnC_04_50.png]] \\
    =05= [[./pics/cs/color_lut_docs_csCBPuBuGn_05_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPuBuGnC_05_50.png]] \\
    =06= [[./pics/cs/color_lut_docs_csCBPuBuGn_06_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPuBuGnC_06_50.png]] \\
    =07= [[./pics/cs/color_lut_docs_csCBPuBuGn_07_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPuBuGnC_07_50.png]] \\
    =08= [[./pics/cs/color_lut_docs_csCBPuBuGn_08_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPuBuGnC_08_50.png]] \\
    =09= [[./pics/cs/color_lut_docs_csCBPuBuGn_09_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPuBuGnC_09_50.png]] 
  - =csCBPuBu= (3-9) :: \\
    =03= [[./pics/cs/color_lut_docs_csCBPuBu_03_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPuBuC_03_50.png]] \\
    =04= [[./pics/cs/color_lut_docs_csCBPuBu_04_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPuBuC_04_50.png]] \\
    =05= [[./pics/cs/color_lut_docs_csCBPuBu_05_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPuBuC_05_50.png]] \\
    =06= [[./pics/cs/color_lut_docs_csCBPuBu_06_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPuBuC_06_50.png]] \\
    =07= [[./pics/cs/color_lut_docs_csCBPuBu_07_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPuBuC_07_50.png]] \\
    =08= [[./pics/cs/color_lut_docs_csCBPuBu_08_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPuBuC_08_50.png]] \\
    =09= [[./pics/cs/color_lut_docs_csCBPuBu_09_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPuBuC_09_50.png]] 
  - =csCBPuOr= (3-11) :: \\
    =03= [[./pics/cs/color_lut_docs_csCBPuOr_03_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPuOrC_03_50.png]] \\
    =04= [[./pics/cs/color_lut_docs_csCBPuOr_04_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPuOrC_04_50.png]] \\
    =05= [[./pics/cs/color_lut_docs_csCBPuOr_05_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPuOrC_05_50.png]] \\
    =06= [[./pics/cs/color_lut_docs_csCBPuOr_06_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPuOrC_06_50.png]] \\
    =07= [[./pics/cs/color_lut_docs_csCBPuOr_07_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPuOrC_07_50.png]] \\
    =08= [[./pics/cs/color_lut_docs_csCBPuOr_08_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPuOrC_08_50.png]] \\
    =09= [[./pics/cs/color_lut_docs_csCBPuOr_09_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPuOrC_09_50.png]] \\
    =10= [[./pics/cs/color_lut_docs_csCBPuOr_10_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPuOrC_10_50.png]] \\
    =11= [[./pics/cs/color_lut_docs_csCBPuOr_11_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPuOrC_11_50.png]] 
  - =csCBPuRd= (3-9) :: \\
    =03= [[./pics/cs/color_lut_docs_csCBPuRd_03_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPuRdC_03_50.png]] \\
    =04= [[./pics/cs/color_lut_docs_csCBPuRd_04_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPuRdC_04_50.png]] \\
    =05= [[./pics/cs/color_lut_docs_csCBPuRd_05_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPuRdC_05_50.png]] \\
    =06= [[./pics/cs/color_lut_docs_csCBPuRd_06_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPuRdC_06_50.png]] \\
    =07= [[./pics/cs/color_lut_docs_csCBPuRd_07_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPuRdC_07_50.png]] \\
    =08= [[./pics/cs/color_lut_docs_csCBPuRd_08_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPuRdC_08_50.png]] \\
    =09= [[./pics/cs/color_lut_docs_csCBPuRd_09_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPuRdC_09_50.png]] 
  - =csCBPurples= (3-9) :: \\
    =03= [[./pics/cs/color_lut_docs_csCBPurples_03_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPurplesC_03_50.png]] \\
    =04= [[./pics/cs/color_lut_docs_csCBPurples_04_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPurplesC_04_50.png]] \\
    =05= [[./pics/cs/color_lut_docs_csCBPurples_05_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPurplesC_05_50.png]] \\
    =06= [[./pics/cs/color_lut_docs_csCBPurples_06_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPurplesC_06_50.png]] \\
    =07= [[./pics/cs/color_lut_docs_csCBPurples_07_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPurplesC_07_50.png]] \\
    =08= [[./pics/cs/color_lut_docs_csCBPurples_08_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPurplesC_08_50.png]] \\
    =09= [[./pics/cs/color_lut_docs_csCBPurples_09_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBPurplesC_09_50.png]] 
  - =csCBRdBu= (3-11) :: \\
    =03= [[./pics/cs/color_lut_docs_csCBRdBu_03_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdBuC_03_50.png]] \\
    =04= [[./pics/cs/color_lut_docs_csCBRdBu_04_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdBuC_04_50.png]] \\
    =05= [[./pics/cs/color_lut_docs_csCBRdBu_05_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdBuC_05_50.png]] \\
    =06= [[./pics/cs/color_lut_docs_csCBRdBu_06_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdBuC_06_50.png]] \\
    =07= [[./pics/cs/color_lut_docs_csCBRdBu_07_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdBuC_07_50.png]] \\
    =08= [[./pics/cs/color_lut_docs_csCBRdBu_08_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdBuC_08_50.png]] \\
    =09= [[./pics/cs/color_lut_docs_csCBRdBu_09_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdBuC_09_50.png]] \\
    =10= [[./pics/cs/color_lut_docs_csCBRdBu_10_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdBuC_10_50.png]] \\
    =11= [[./pics/cs/color_lut_docs_csCBRdBu_11_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdBuC_11_50.png]] 
  - =csCBRdGy= (3-11) :: \\
    =03= [[./pics/cs/color_lut_docs_csCBRdGy_03_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdGyC_03_50.png]] \\
    =04= [[./pics/cs/color_lut_docs_csCBRdGy_04_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdGyC_04_50.png]] \\
    =05= [[./pics/cs/color_lut_docs_csCBRdGy_05_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdGyC_05_50.png]] \\
    =06= [[./pics/cs/color_lut_docs_csCBRdGy_06_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdGyC_06_50.png]] \\
    =07= [[./pics/cs/color_lut_docs_csCBRdGy_07_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdGyC_07_50.png]] \\
    =08= [[./pics/cs/color_lut_docs_csCBRdGy_08_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdGyC_08_50.png]] \\
    =09= [[./pics/cs/color_lut_docs_csCBRdGy_09_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdGyC_09_50.png]] \\
    =10= [[./pics/cs/color_lut_docs_csCBRdGy_10_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdGyC_10_50.png]] \\
    =11= [[./pics/cs/color_lut_docs_csCBRdGy_11_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdGyC_11_50.png]] 
  - =csCBRdPu= (3-9) :: \\
    =03= [[./pics/cs/color_lut_docs_csCBRdPu_03_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdPuC_03_50.png]] \\
    =04= [[./pics/cs/color_lut_docs_csCBRdPu_04_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdPuC_04_50.png]] \\
    =05= [[./pics/cs/color_lut_docs_csCBRdPu_05_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdPuC_05_50.png]] \\
    =06= [[./pics/cs/color_lut_docs_csCBRdPu_06_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdPuC_06_50.png]] \\
    =07= [[./pics/cs/color_lut_docs_csCBRdPu_07_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdPuC_07_50.png]] \\
    =08= [[./pics/cs/color_lut_docs_csCBRdPu_08_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdPuC_08_50.png]] \\
    =09= [[./pics/cs/color_lut_docs_csCBRdPu_09_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdPuC_09_50.png]] 
  - =csCBRdYlBu= (3-11) :: \\
    =03= [[./pics/cs/color_lut_docs_csCBRdYlBu_03_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdYlBuC_03_50.png]] \\
    =04= [[./pics/cs/color_lut_docs_csCBRdYlBu_04_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdYlBuC_04_50.png]] \\
    =05= [[./pics/cs/color_lut_docs_csCBRdYlBu_05_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdYlBuC_05_50.png]] \\
    =06= [[./pics/cs/color_lut_docs_csCBRdYlBu_06_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdYlBuC_06_50.png]] \\
    =07= [[./pics/cs/color_lut_docs_csCBRdYlBu_07_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdYlBuC_07_50.png]] \\
    =08= [[./pics/cs/color_lut_docs_csCBRdYlBu_08_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdYlBuC_08_50.png]] \\
    =09= [[./pics/cs/color_lut_docs_csCBRdYlBu_09_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdYlBuC_09_50.png]] \\
    =10= [[./pics/cs/color_lut_docs_csCBRdYlBu_10_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdYlBuC_10_50.png]] \\
    =11= [[./pics/cs/color_lut_docs_csCBRdYlBu_11_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdYlBuC_11_50.png]] 
  - =csCBRdYlGn= (3-11) :: \\
    =03= [[./pics/cs/color_lut_docs_csCBRdYlGn_03_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdYlGnC_03_50.png]] \\
    =04= [[./pics/cs/color_lut_docs_csCBRdYlGn_04_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdYlGnC_04_50.png]] \\
    =05= [[./pics/cs/color_lut_docs_csCBRdYlGn_05_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdYlGnC_05_50.png]] \\
    =06= [[./pics/cs/color_lut_docs_csCBRdYlGn_06_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdYlGnC_06_50.png]] \\
    =07= [[./pics/cs/color_lut_docs_csCBRdYlGn_07_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdYlGnC_07_50.png]] \\
    =08= [[./pics/cs/color_lut_docs_csCBRdYlGn_08_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdYlGnC_08_50.png]] \\
    =09= [[./pics/cs/color_lut_docs_csCBRdYlGn_09_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdYlGnC_09_50.png]] \\
    =10= [[./pics/cs/color_lut_docs_csCBRdYlGn_10_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdYlGnC_10_50.png]] \\
    =11= [[./pics/cs/color_lut_docs_csCBRdYlGn_11_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRdYlGnC_11_50.png]] 
  - =csCBReds= (3-9) :: \\
    =03= [[./pics/cs/color_lut_docs_csCBReds_03_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRedsC_03_50.png]] \\
    =04= [[./pics/cs/color_lut_docs_csCBReds_04_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRedsC_04_50.png]] \\
    =05= [[./pics/cs/color_lut_docs_csCBReds_05_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRedsC_05_50.png]] \\
    =06= [[./pics/cs/color_lut_docs_csCBReds_06_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRedsC_06_50.png]] \\
    =07= [[./pics/cs/color_lut_docs_csCBReds_07_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRedsC_07_50.png]] \\
    =08= [[./pics/cs/color_lut_docs_csCBReds_08_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRedsC_08_50.png]] \\
    =09= [[./pics/cs/color_lut_docs_csCBReds_09_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBRedsC_09_50.png]] 
  - =csCBSet1= (3-9) :: \\
    =03= [[./pics/cs/color_lut_docs_csCBSet1_03_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBSet1C_03_50.png]] \\
    =04= [[./pics/cs/color_lut_docs_csCBSet1_04_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBSet1C_04_50.png]] \\
    =05= [[./pics/cs/color_lut_docs_csCBSet1_05_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBSet1C_05_50.png]] \\
    =06= [[./pics/cs/color_lut_docs_csCBSet1_06_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBSet1C_06_50.png]] \\
    =07= [[./pics/cs/color_lut_docs_csCBSet1_07_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBSet1C_07_50.png]] \\
    =08= [[./pics/cs/color_lut_docs_csCBSet1_08_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBSet1C_08_50.png]] \\
    =09= [[./pics/cs/color_lut_docs_csCBSet1_09_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBSet1C_09_50.png]] 
  - =csCBSet2= (3-8) :: \\
    =03= [[./pics/cs/color_lut_docs_csCBSet2_03_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBSet2C_03_50.png]] \\
    =04= [[./pics/cs/color_lut_docs_csCBSet2_04_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBSet2C_04_50.png]] \\
    =05= [[./pics/cs/color_lut_docs_csCBSet2_05_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBSet2C_05_50.png]] \\
    =06= [[./pics/cs/color_lut_docs_csCBSet2_06_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBSet2C_06_50.png]] \\
    =07= [[./pics/cs/color_lut_docs_csCBSet2_07_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBSet2C_07_50.png]] \\
    =08= [[./pics/cs/color_lut_docs_csCBSet2_08_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBSet2C_08_50.png]] 
  - =csCBSet3= (3-12) :: \\
    =03= [[./pics/cs/color_lut_docs_csCBSet3_03_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBSet3C_03_50.png]] \\
    =04= [[./pics/cs/color_lut_docs_csCBSet3_04_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBSet3C_04_50.png]] \\
    =05= [[./pics/cs/color_lut_docs_csCBSet3_05_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBSet3C_05_50.png]] \\
    =06= [[./pics/cs/color_lut_docs_csCBSet3_06_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBSet3C_06_50.png]] \\
    =07= [[./pics/cs/color_lut_docs_csCBSet3_07_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBSet3C_07_50.png]] \\
    =08= [[./pics/cs/color_lut_docs_csCBSet3_08_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBSet3C_08_50.png]] \\
    =09= [[./pics/cs/color_lut_docs_csCBSet3_09_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBSet3C_09_50.png]] \\
    =10= [[./pics/cs/color_lut_docs_csCBSet3_10_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBSet3C_10_50.png]] \\
    =11= [[./pics/cs/color_lut_docs_csCBSet3_11_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBSet3C_11_50.png]] \\
    =12= [[./pics/cs/color_lut_docs_csCBSet3_12_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBSet3C_12_50.png]]
  - =csCBSpectral= (3-11) :: \\
    =03= [[./pics/cs/color_lut_docs_csCBSpectral_03_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBSpectralC_03_50.png]] \\
    =04= [[./pics/cs/color_lut_docs_csCBSpectral_04_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBSpectralC_04_50.png]] \\
    =05= [[./pics/cs/color_lut_docs_csCBSpectral_05_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBSpectralC_05_50.png]] \\
    =06= [[./pics/cs/color_lut_docs_csCBSpectral_06_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBSpectralC_06_50.png]] \\
    =07= [[./pics/cs/color_lut_docs_csCBSpectral_07_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBSpectralC_07_50.png]] \\
    =08= [[./pics/cs/color_lut_docs_csCBSpectral_08_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBSpectralC_08_50.png]] \\
    =09= [[./pics/cs/color_lut_docs_csCBSpectral_09_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBSpectralC_09_50.png]] \\
    =10= [[./pics/cs/color_lut_docs_csCBSpectral_10_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBSpectralC_10_50.png]] \\
    =11= [[./pics/cs/color_lut_docs_csCBSpectral_11_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBSpectralC_11_50.png]] 
  - =csCBYlGnBu= (3-9) :: \\
    =03= [[./pics/cs/color_lut_docs_csCBYlGnBu_03_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBYlGnBuC_03_50.png]] \\
    =04= [[./pics/cs/color_lut_docs_csCBYlGnBu_04_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBYlGnBuC_04_50.png]] \\
    =05= [[./pics/cs/color_lut_docs_csCBYlGnBu_05_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBYlGnBuC_05_50.png]] \\
    =06= [[./pics/cs/color_lut_docs_csCBYlGnBu_06_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBYlGnBuC_06_50.png]] \\
    =07= [[./pics/cs/color_lut_docs_csCBYlGnBu_07_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBYlGnBuC_07_50.png]] \\
    =08= [[./pics/cs/color_lut_docs_csCBYlGnBu_08_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBYlGnBuC_08_50.png]] \\
    =09= [[./pics/cs/color_lut_docs_csCBYlGnBu_09_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBYlGnBuC_09_50.png]] 
  - =csCBYlGn= (3-9) :: \\
    =03= [[./pics/cs/color_lut_docs_csCBYlGn_03_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBYlGnC_03_50.png]] \\
    =04= [[./pics/cs/color_lut_docs_csCBYlGn_04_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBYlGnC_04_50.png]] \\
    =05= [[./pics/cs/color_lut_docs_csCBYlGn_05_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBYlGnC_05_50.png]] \\
    =06= [[./pics/cs/color_lut_docs_csCBYlGn_06_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBYlGnC_06_50.png]] \\
    =07= [[./pics/cs/color_lut_docs_csCBYlGn_07_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBYlGnC_07_50.png]] \\
    =08= [[./pics/cs/color_lut_docs_csCBYlGn_08_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBYlGnC_08_50.png]] \\
    =09= [[./pics/cs/color_lut_docs_csCBYlGn_09_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBYlGnC_09_50.png]] 
  - =csCBYlOrBr= (3-9) :: \\
    =03= [[./pics/cs/color_lut_docs_csCBYlOrBr_03_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBYlOrBrC_03_50.png]] \\
    =04= [[./pics/cs/color_lut_docs_csCBYlOrBr_04_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBYlOrBrC_04_50.png]] \\
    =05= [[./pics/cs/color_lut_docs_csCBYlOrBr_05_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBYlOrBrC_05_50.png]] \\
    =06= [[./pics/cs/color_lut_docs_csCBYlOrBr_06_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBYlOrBrC_06_50.png]] \\
    =07= [[./pics/cs/color_lut_docs_csCBYlOrBr_07_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBYlOrBrC_07_50.png]] \\
    =08= [[./pics/cs/color_lut_docs_csCBYlOrBr_08_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBYlOrBrC_08_50.png]] \\
    =09= [[./pics/cs/color_lut_docs_csCBYlOrBr_09_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBYlOrBrC_09_50.png]] 
  - =csCBYlOrRd= (3-8) :: \\
    =03= [[./pics/cs/color_lut_docs_csCBYlOrRd_03_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBYlOrRdC_03_50.png]] \\
    =04= [[./pics/cs/color_lut_docs_csCBYlOrRd_04_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBYlOrRdC_04_50.png]] \\
    =05= [[./pics/cs/color_lut_docs_csCBYlOrRd_05_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBYlOrRdC_05_50.png]] \\
    =06= [[./pics/cs/color_lut_docs_csCBYlOrRd_06_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBYlOrRdC_06_50.png]] \\
    =07= [[./pics/cs/color_lut_docs_csCBYlOrRd_07_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBYlOrRdC_07_50.png]] \\
    =08= [[./pics/cs/color_lut_docs_csCBYlOrRd_08_50.png]]  \\
    =--= [[./pics/cs/color_lut_docs_csCBYlOrRdC_08_50.png]] 

* Web Safe & Color Blind Pallets
:PROPERTIES:
:CUSTOM_ID: csWS
:END:

  - =csWSSafeDeutanopia= :: \\
    [[./pics/cs/color_lut_docs_csWSdeutanopia_50.png]]
  - =csWSSafeDeutanopiaAlt= :: \\
    [[./pics/cs/color_lut_docs_csWSdeutanopiaAlt_50.png]]
  - =csWSSafeNormalVision= :: \\
    [[./pics/cs/color_lut_docs_csWSnormalVision_50.png]]
  - =csWSSafeProtanopia= :: \\
    [[./pics/cs/color_lut_docs_csWSprotanopia_50.png]]
  - =csWSSafeProtanopiaAlt= :: \\
    [[./pics/cs/color_lut_docs_csWSprotanopiaAlt_50.png]]
  - =csWSSafeTritanoptia= :: \\
    [[./pics/cs/color_lut_docs_csWStritanoptia_50.png]]
  - =csWSSafeTritanoptiaAlt= :: \\
    [[./pics/cs/color_lut_docs_csWStritanoptiaAlt_50.png]]

* Miscilanious Pallets
:PROPERTIES:
:CUSTOM_ID: csFPmisc
:END:

These pallets are taken from various sources.  Many of them are aviable in the NCAR collection of color maps.  In some cases I have modified these maps from
the origonal sources.

  - =csFPblAqGrYeOrReVi200= :: \\
    [[./pics/cs/color_lut_docs_csFPblAqGrYeOrReVi200_50.png]] \\
    [[./pics/cs/color_lut_docs_csFPblAqGrYeOrReVi200C_50.png]]
  - =csFPcircular12= :: \\
    [[./pics/cs/color_lut_docs_csFPcircular12_50.png]] \\
    [[./pics/cs/color_lut_docs_csFPcircular12C_50.png]]
  - =csFPcircular24= :: \\
    [[./pics/cs/color_lut_docs_csFPcircular24_50.png]] \\
    [[./pics/cs/color_lut_docs_csFPcircular24C_50.png]]
  - =csFPcmoceanAlgae= :: \\
    [[./pics/cs/color_lut_docs_csFPcmoceanAlgae_50.png]] \\
    [[./pics/cs/color_lut_docs_csFPcmoceanAlgaeC_50.png]]
  - =csFPcmoceanAmp= :: \\
    [[./pics/cs/color_lut_docs_csFPcmoceanAmp_50.png]] \\
    [[./pics/cs/color_lut_docs_csFPcmoceanAmpC_50.png]]
  - =csFPcmoceanBalance= :: \\
    [[./pics/cs/color_lut_docs_csFPcmoceanBalance_50.png]] \\
    [[./pics/cs/color_lut_docs_csFPcmoceanBalanceC_50.png]]
  - =csFPcmoceanCurl= :: \\
    [[./pics/cs/color_lut_docs_csFPcmoceanCurl_50.png]] \\
    [[./pics/cs/color_lut_docs_csFPcmoceanCurlC_50.png]]
  - =csFPcmoceanDeep= :: \\
    [[./pics/cs/color_lut_docs_csFPcmoceanDeep_50.png]] \\
    [[./pics/cs/color_lut_docs_csFPcmoceanDeepC_50.png]]
  - =csFPcmoceanDense= :: \\
    [[./pics/cs/color_lut_docs_csFPcmoceanDense_50.png]] \\
    [[./pics/cs/color_lut_docs_csFPcmoceanDenseC_50.png]]
  - =csFPcmoceanHaline= :: \\
    [[./pics/cs/color_lut_docs_csFPcmoceanHaline_50.png]] \\
    [[./pics/cs/color_lut_docs_csFPcmoceanHalineC_50.png]]
  - =csFPcmoceanIce= :: \\
    [[./pics/cs/color_lut_docs_csFPcmoceanIce_50.png]] \\
    [[./pics/cs/color_lut_docs_csFPcmoceanIceC_50.png]]
  - =csFPcmoceanTempo= :: \\
    [[./pics/cs/color_lut_docs_csFPcmoceanTempo_50.png]] \\
    [[./pics/cs/color_lut_docs_csFPcmoceanTempoC_50.png]]
  - =csFPmplBrBG= :: \\
    [[./pics/cs/color_lut_docs_csFPmplBrBG_50.png]] \\
    [[./pics/cs/color_lut_docs_csFPmplBrBGC_50.png]]
  - =csFPmplOcean= :: \\
    [[./pics/cs/color_lut_docs_csFPmplOcean_50.png]] \\
    [[./pics/cs/color_lut_docs_csFPmplOceanC_50.png]]
  - =csFPmplOranges= :: \\
    [[./pics/cs/color_lut_docs_csFPmplOranges_50.png]] \\
    [[./pics/cs/color_lut_docs_csFPmplOrangesC_50.png]]
  - =csFPneoDdivVegetationA= :: \\
    [[./pics/cs/color_lut_docs_csFPneoDdivVegetationA_50.png]] \\
    [[./pics/cs/color_lut_docs_csFPneoDdivVegetationAC_50.png]]
  - =csFPneoDivVegetationC= :: \\
    [[./pics/cs/color_lut_docs_csFPneoDivVegetationC_50.png]]
    [[./pics/cs/color_lut_docs_csFPneoDivVegetationCC_50.png]]
  - =csFPneoModisNdvi= :: \\
    [[./pics/cs/color_lut_docs_csFPneoModisNdvi_50.png]] \\
    [[./pics/cs/color_lut_docs_csFPneoModisNdviC_50.png]]

* Binary Pallets
:PROPERTIES:
:CUSTOM_ID: csBin
:END:

These are really just two color fixed pallets; however, they are generally used as infinite pallets that take on the first color for even indexes and the
second color for odd indexes. Unlike fixed pallets, these do not have a "continuous" option and they are restricted to RGB corner colors.

  - =csBin01= :: \\
    [[./pics/cs/color_lut_docs_csBin01_50.png]]
  - =csBinGB= :: \\
    [[./pics/cs/color_lut_docs_csBinGB_50.png]]
  - =csBinMC= :: \\
    [[./pics/cs/color_lut_docs_csBinMC_50.png]]
  - =csBinMY= :: \\
    [[./pics/cs/color_lut_docs_csBinMY_50.png]]
  - =csBinRB= :: \\
    [[./pics/cs/color_lut_docs_csBinRB_50.png]]
  - =csBinRG= :: \\
    [[./pics/cs/color_lut_docs_csBinRG_50.png]]
  - =csBinYC= :: \\
    [[./pics/cs/color_lut_docs_csBinYC_50.png]]

* Predefined Color Scheme Cross Reference
:PROPERTIES:
:CUSTOM_ID: xRef
:END:

** Greys
:PROPERTIES:
:CUSTOM_ID: xRefGrey
:END:

Note =csCubeHelix_tpl= with very small amplitude produces greys similar to =csPGrey3x= & =csPGrey4x=.

  - =csPGrey3x= :: \\
    [[./pics/cs/color_lut_docs_csPGrey3x_50.png]]
  - =csPGrey4x= :: \\
    [[./pics/cs/color_lut_docs_csPGrey4x_50.png]]
  - =csCBGreys= (illustrated with 9 colors) :: \\
    [[./pics/cs/color_lut_docs_csCBGreys_50.png]] \\
    [[./pics/cs/color_lut_docs_csCBGreysC_50.png]]
  - =csBin01= :: \\
    [[./pics/cs/color_lut_docs_csBin01_50.png]]
  - =csPLYgrey= :: \\
    [[./pics/cs/color_lut_docs_csPLYgrey_50.png]]
  - =csPLYquad= :: \\
    [[./pics/cs/color_lut_docs_csPLYquad_50.png]]
  - =csCCdiag01= :: \\
    [[./pics/cs/color_lut_docs_csCCdiag01_50.png]]
  - =csCCu0W= :: \\
    [[./pics/cs/color_lut_docs_csCCu0W_50.png]]

** Circular
:PROPERTIES:
:CUSTOM_ID: xRefCirc
:END:

Note =csCC_tpl= can be used to make circular color schemes -- any cycle in the color cube vertex graph forms a circular color scheme.

Note =csPLY_tpl= can be used to make circular color schemes -- any closed parametric curve in the RGB color cube space forms a circular color scheme.

  - =csFPblAqGrYeOrReVi200= :: \\
    [[./pics/cs/color_lut_docs_csFPblAqGrYeOrReVi200_50.png]] \\
    [[./pics/cs/color_lut_docs_csFPblAqGrYeOrReVi200C_50.png]]
  - =csFPcircular12= :: \\
    [[./pics/cs/color_lut_docs_csFPcircular12_50.png]] \\
    [[./pics/cs/color_lut_docs_csFPcircular12C_50.png]]
  - =csFPcircular24= :: \\
    [[./pics/cs/color_lut_docs_csFPcircular24_50.png]] \\
    [[./pics/cs/color_lut_docs_csFPcircular24C_50.png]]
  - =csCColdeRainbow= :: \\
    [[./pics/cs/color_lut_docs_csCColdeRainbow_50.png]]
  - =csPLYhsvRB= :: \\
    [[./pics/cs/color_lut_docs_csPLYhsvRB_50.png]]
  - =csCCconsTwo= :: \\
    [[./pics/cs/color_lut_docs_csCCconsTwo_50.png]]
  - =csCCconsOne= :: \\
    [[./pics/cs/color_lut_docs_csCCconsOne_50.png]]

** Divergent
:PROPERTIES:
:CUSTOM_ID: xRefDiv
:END:

  - =csFPcmoceanBalance= :: \\
    [[./pics/cs/color_lut_docs_csFPcmoceanBalance_50.png]] \\
    [[./pics/cs/color_lut_docs_csFPcmoceanBalanceC_50.png]]
  - =csFPcmoceanCurl= :: \\
    [[./pics/cs/color_lut_docs_csFPcmoceanCurl_50.png]] \\
    [[./pics/cs/color_lut_docs_csFPcmoceanCurlC_50.png]]
  - =csFPneoDdivVegetationA= :: \\
    [[./pics/cs/color_lut_docs_csFPneoDdivVegetationA_50.png]] \\
    [[./pics/cs/color_lut_docs_csFPneoDdivVegetationAC_50.png]]
  - =csFPneoDivVegetationC= :: \\
    [[./pics/cs/color_lut_docs_csFPneoDivVegetationC_50.png]]
    [[./pics/cs/color_lut_docs_csFPneoDivVegetationCC_50.png]]
  - =csFPmplBrBG= :: \\
    [[./pics/cs/color_lut_docs_csFPmplBrBG_50.png]] \\
    [[./pics/cs/color_lut_docs_csFPmplBrBGC_50.png]]
  - =csCBBrBG= (illustrated with 11 colors) :: \\
    [[./pics/cs/color_lut_docs_csCBBrBG_50.png]] \\
    [[./pics/cs/color_lut_docs_csCBBrBGC_50.png]]
  - =csCBPuOr= (illustrated with 11 colors) :: \\
    [[./pics/cs/color_lut_docs_csCBPuOr_50.png]] \\
    [[./pics/cs/color_lut_docs_csCBPuOrC_50.png]]
  - =csCBPiYG= (illustrated with 11 colors) :: \\
    [[./pics/cs/color_lut_docs_csCBPiYG_50.png]] \\
    [[./pics/cs/color_lut_docs_csCBPiYGC_50.png]]
  - =csCBPRGn= (illustrated with 11 colors) :: \\
    [[./pics/cs/color_lut_docs_csCBPRGn_50.png]] \\
    [[./pics/cs/color_lut_docs_csCBPRGnC_50.png]]
  - =csCBRdBu= (illustrated with 11 colors) :: \\
    [[./pics/cs/color_lut_docs_csCBRdBu_50.png]] \\
    [[./pics/cs/color_lut_docs_csCBRdBuC_50.png]]
  - =csCBRdGy= (illustrated with 11 colors) :: \\
    [[./pics/cs/color_lut_docs_csCBRdGy_50.png]] \\
    [[./pics/cs/color_lut_docs_csCBRdGyC_50.png]]
  - =csCBRdYlGn= (illustrated with 11 colors) :: \\
    [[./pics/cs/color_lut_docs_csCBRdYlGn_50.png]] \\
    [[./pics/cs/color_lut_docs_csCBRdYlGnC_50.png]]
  - =csCBRdYlBu= (illustrated with 11 colors) :: \\
    [[./pics/cs/color_lut_docs_csCBRdYlBu_50.png]] \\
    [[./pics/cs/color_lut_docs_csCBRdYlBuC_50.png]]
  - =csCBSpectral= (illustrated with 11 colors) :: \\
    [[./pics/cs/color_lut_docs_csCBSpectral_50.png]] \\
    [[./pics/cs/color_lut_docs_csCBSpectralC_50.png]]
  - =csCCdivBWR= :: \\
    [[./pics/cs/color_lut_docs_csCCdivBWR_50.png]]
  - =csCCdivCWM= :: \\
    [[./pics/cs/color_lut_docs_csCCdivCWM_50.png]]

** Qualitative
:PROPERTIES:
:CUSTOM_ID: xRefQual
:END:

  - =csCBDark2= (illustrated with 8 colors) :: \\
    [[./pics/cs/color_lut_docs_csCBDark2_50.png]]
  - =csCBPaired= (illustrated with 12 colors) :: \\
    [[./pics/cs/color_lut_docs_csCBPaired_50.png]]
  - =csCBSet1= (illustrated with 9 colors) :: \\
    [[./pics/cs/color_lut_docs_csCBSet1_50.png]]
  - =csCBSet2= (illustrated with 8 colors) :: \\
    [[./pics/cs/color_lut_docs_csCBSet2_50.png]]
  - =csCBSet3= (illustrated with 12 colors) :: \\
    [[./pics/cs/color_lut_docs_csCBSet3_50.png]]

** Sequential
:PROPERTIES:
:CUSTOM_ID: xRefSeq
:END:

  - =csCBBlues= (illustrated with 9 colors) :: \\
    [[./pics/cs/color_lut_docs_csCBBlues_50.png]] \\
    [[./pics/cs/color_lut_docs_csCBBluesC_50.png]]
  - =csCBBuGn= (illustrated with 9 colors) :: \\
    [[./pics/cs/color_lut_docs_csCBBuGn_50.png]] \\
    [[./pics/cs/color_lut_docs_csCBBuGnC_50.png]]
  - =csCBBuPu= (illustrated with 9 colors) :: \\
    [[./pics/cs/color_lut_docs_csCBBuPu_50.png]] \\
    [[./pics/cs/color_lut_docs_csCBBuPuC_50.png]]
  - =csCBGnBu= (illustrated with 9 colors) :: \\
    [[./pics/cs/color_lut_docs_csCBGnBu_50.png]] \\
    [[./pics/cs/color_lut_docs_csCBGnBuC_50.png]]
  - =csCBGreens= (illustrated with 9 colors) :: \\
    [[./pics/cs/color_lut_docs_csCBGreens_50.png]] \\
    [[./pics/cs/color_lut_docs_csCBGreensC_50.png]]
  - =csCBGreys= (illustrated with 9 colors) :: \\
    [[./pics/cs/color_lut_docs_csCBGreys_50.png]] \\
    [[./pics/cs/color_lut_docs_csCBGreysC_50.png]]
  - =csCBOranges= (illustrated with 9 colors) :: \\
    [[./pics/cs/color_lut_docs_csCBOranges_50.png]] \\
    [[./pics/cs/color_lut_docs_csCBOrangesC_50.png]]
  - =csCBPuBuGn= (illustrated with 9 colors) :: \\
    [[./pics/cs/color_lut_docs_csCBPuBuGn_50.png]] \\
    [[./pics/cs/color_lut_docs_csCBPuBuGnC_50.png]]
  - =csCBPuBu= (illustrated with 9 colors) :: \\
    [[./pics/cs/color_lut_docs_csCBPuBu_50.png]] \\
    [[./pics/cs/color_lut_docs_csCBPuBuC_50.png]]
  - =csCBPuRd= (illustrated with 9 colors) :: \\
    [[./pics/cs/color_lut_docs_csCBPuRd_50.png]] \\
    [[./pics/cs/color_lut_docs_csCBPuRdC_50.png]]
  - =csCBPurples= (illustrated with 9 colors) :: \\
    [[./pics/cs/color_lut_docs_csCBPurples_50.png]] \\
    [[./pics/cs/color_lut_docs_csCBPurplesC_50.png]]
  - =csCBRdPu= (illustrated with 9 colors) :: \\
    [[./pics/cs/color_lut_docs_csCBRdPu_50.png]] \\
    [[./pics/cs/color_lut_docs_csCBRdPuC_50.png]]
  - =csCBReds= (illustrated with 9 colors) :: \\
    [[./pics/cs/color_lut_docs_csCBReds_50.png]] \\
    [[./pics/cs/color_lut_docs_csCBRedsC_50.png]]
  - =csCBYlGnBu= (illustrated with 9 colors) :: \\
    [[./pics/cs/color_lut_docs_csCBYlGnBu_50.png]] \\
    [[./pics/cs/color_lut_docs_csCBYlGnBuC_50.png]]
  - =csCBYlGn= (illustrated with 9 colors) :: \\
    [[./pics/cs/color_lut_docs_csCBYlGn_50.png]] \\
    [[./pics/cs/color_lut_docs_csCBYlGnC_50.png]]
  - =csCBYlOrBr= (illustrated with 9 colors) :: \\
    [[./pics/cs/color_lut_docs_csCBYlOrBr_50.png]] \\
    [[./pics/cs/color_lut_docs_csCBYlOrBrC_50.png]]
  - =csCBYlOrRd= (illustrated with 8 colors) :: \\
    [[./pics/cs/color_lut_docs_csCBYlOrRd_50.png]] \\
    [[./pics/cs/color_lut_docs_csCBYlOrRdC_50.png]]
  - =csFPcmoceanAlgae= :: \\
    [[./pics/cs/color_lut_docs_csFPcmoceanAlgae_50.png]] \\
    [[./pics/cs/color_lut_docs_csFPcmoceanAlgaeC_50.png]]
  - =csFPcmoceanAmp= :: \\
    [[./pics/cs/color_lut_docs_csFPcmoceanAmp_50.png]] \\
    [[./pics/cs/color_lut_docs_csFPcmoceanAmpC_50.png]]
  - =csFPcmoceanDeep= :: \\
    [[./pics/cs/color_lut_docs_csFPcmoceanDeep_50.png]] \\
    [[./pics/cs/color_lut_docs_csFPcmoceanDeepC_50.png]]
  - =csFPcmoceanDense= :: \\
    [[./pics/cs/color_lut_docs_csFPcmoceanDense_50.png]] \\
    [[./pics/cs/color_lut_docs_csFPcmoceanDenseC_50.png]]
  - =csFPcmoceanHaline= :: \\
    [[./pics/cs/color_lut_docs_csFPcmoceanHaline_50.png]] \\
    [[./pics/cs/color_lut_docs_csFPcmoceanHalineC_50.png]]
  - =csFPcmoceanIce= :: \\
    [[./pics/cs/color_lut_docs_csFPcmoceanIce_50.png]] \\
    [[./pics/cs/color_lut_docs_csFPcmoceanIceC_50.png]]
  - =csFPcmoceanTempo= :: \\
    [[./pics/cs/color_lut_docs_csFPcmoceanTempo_50.png]] \\
    [[./pics/cs/color_lut_docs_csFPcmoceanTempoC_50.png]]
  - =csFPmplOcean= :: \\
    [[./pics/cs/color_lut_docs_csFPmplOcean_50.png]] \\
    [[./pics/cs/color_lut_docs_csFPmplOceanC_50.png]]
  - =csFPmplOranges= :: \\
    [[./pics/cs/color_lut_docs_csFPmplOranges_50.png]] \\
    [[./pics/cs/color_lut_docs_csFPmplOrangesC_50.png]]
  - =csFPneoModisNdvi= :: \\
    [[./pics/cs/color_lut_docs_csFPneoModisNdvi_50.png]] \\
    [[./pics/cs/color_lut_docs_csFPneoModisNdviC_50.png]]
  - =csCCsumRGB= & =csCColdeFireRamp= :: \\
    [[./pics/cs/color_lut_docs_csCCsumRGB_50.png]]
  - =csPLYinferno= :: \\
    [[./pics/cs/color_lut_docs_csPLYinferno_50.png]]
  - =csPLYmagma= :: \\
    [[./pics/cs/color_lut_docs_csPLYmagma_50.png]]
  - =csPLYparula= :: \\
    [[./pics/cs/color_lut_docs_csPLYparula_50.png]]
  - =csPLYplasma= :: \\
    [[./pics/cs/color_lut_docs_csPLYplasma_50.png]]
  - =csPLYviridis= :: \\
    [[./pics/cs/color_lut_docs_csPLYviridis_50.png]]
  - =csPLYcividis= :: \\
    [[./pics/cs/color_lut_docs_csPLYcividis_50.png]]
  - =csCHstd= :: \\
    [[./pics/cs/color_lut_docs_csCHstd_50.png]]
  - =csCHblu= :: \\
    [[./pics/cs/color_lut_docs_csCHblu_50.png]]
  - =csCHvio= :: \\
    [[./pics/cs/color_lut_docs_csCHvio_50.png]]

* Converting and processing previews                               :noexport:
:PROPERTIES:
:CUSTOM_ID: meta
:END:

In the build directory, we run the =color_lut_docs= example to generate all the TIFF files.

#+begin_src sh
make color_lut_docs && ./color_lut_docs.exe
#+end_src

In this directory, we run the following to create PNGs:

#+begin_src bash :results output verbatim
for f in ../build/color_lut_docs_*.tiff; do 
  echo $f; 
  nf100=$(echo pics/cs/`basename $f` | sed 's/.tiff/.png/')
  magick $f $nf100; 
  nf50=$(echo pics/cs/`basename $f` | sed 's/.tiff/_50.png/')
  magick $f -resize 50% $nf50; 
done
#+end_src

#+RESULTS:
#+begin_example
../build/color_lut_docs_csCBAccent.tiff
../build/color_lut_docs_csCBAccentC.tiff
../build/color_lut_docs_csCBBlues.tiff
../build/color_lut_docs_csCBBluesC.tiff
../build/color_lut_docs_csCBBrBG.tiff
../build/color_lut_docs_csCBBrBGC.tiff
../build/color_lut_docs_csCBBuGn.tiff
../build/color_lut_docs_csCBBuGnC.tiff
../build/color_lut_docs_csCBBuPu.tiff
../build/color_lut_docs_csCBBuPuC.tiff
../build/color_lut_docs_csCBDark2.tiff
../build/color_lut_docs_csCBDark2C.tiff
../build/color_lut_docs_csCBGnBu.tiff
../build/color_lut_docs_csCBGnBuC.tiff
../build/color_lut_docs_csCBGreens.tiff
../build/color_lut_docs_csCBGreensC.tiff
../build/color_lut_docs_csCBGreys.tiff
../build/color_lut_docs_csCBGreysC.tiff
../build/color_lut_docs_csCBOrRd.tiff
../build/color_lut_docs_csCBOrRdC.tiff
../build/color_lut_docs_csCBOranges.tiff
../build/color_lut_docs_csCBOrangesC.tiff
../build/color_lut_docs_csCBPRGn.tiff
../build/color_lut_docs_csCBPRGnC.tiff
../build/color_lut_docs_csCBPaired.tiff
../build/color_lut_docs_csCBPairedC.tiff
../build/color_lut_docs_csCBPastel1.tiff
../build/color_lut_docs_csCBPastel1C.tiff
../build/color_lut_docs_csCBPastel2.tiff
../build/color_lut_docs_csCBPastel2C.tiff
../build/color_lut_docs_csCBPiYG.tiff
../build/color_lut_docs_csCBPiYGC.tiff
../build/color_lut_docs_csCBPuBu.tiff
../build/color_lut_docs_csCBPuBuC.tiff
../build/color_lut_docs_csCBPuBuGn.tiff
../build/color_lut_docs_csCBPuBuGnC.tiff
../build/color_lut_docs_csCBPuOr.tiff
../build/color_lut_docs_csCBPuOrC.tiff
../build/color_lut_docs_csCBPuRd.tiff
../build/color_lut_docs_csCBPuRdC.tiff
../build/color_lut_docs_csCBPurples.tiff
../build/color_lut_docs_csCBPurplesC.tiff
../build/color_lut_docs_csCBRdBu.tiff
../build/color_lut_docs_csCBRdBuC.tiff
../build/color_lut_docs_csCBRdGy.tiff
../build/color_lut_docs_csCBRdGyC.tiff
../build/color_lut_docs_csCBRdPu.tiff
../build/color_lut_docs_csCBRdPuC.tiff
../build/color_lut_docs_csCBRdYlBu.tiff
../build/color_lut_docs_csCBRdYlBuC.tiff
../build/color_lut_docs_csCBRdYlGn.tiff
../build/color_lut_docs_csCBRdYlGnC.tiff
../build/color_lut_docs_csCBReds.tiff
../build/color_lut_docs_csCBRedsC.tiff
../build/color_lut_docs_csCBSet1.tiff
../build/color_lut_docs_csCBSet1C.tiff
../build/color_lut_docs_csCBSet2.tiff
../build/color_lut_docs_csCBSet2C.tiff
../build/color_lut_docs_csCBSet3.tiff
../build/color_lut_docs_csCBSet3C.tiff
../build/color_lut_docs_csCBSpectral.tiff
../build/color_lut_docs_csCBSpectralC.tiff
../build/color_lut_docs_csCBYlGn.tiff
../build/color_lut_docs_csCBYlGnBu.tiff
../build/color_lut_docs_csCBYlGnBuC.tiff
../build/color_lut_docs_csCBYlGnC.tiff
../build/color_lut_docs_csCBYlOrBr.tiff
../build/color_lut_docs_csCBYlOrBrC.tiff
../build/color_lut_docs_csCBYlOrRd.tiff
../build/color_lut_docs_csCBYlOrRdC.tiff
#+end_example

#+begin_src zsh
for f in ../build/color_lut_docs_*.tiff(:r); do 
  echo $f; 
  nf=pics/cs/`basename $f`_50.png; 
  convert -resize 50% $f.tiff $nf; 
done
#+end_src

#+RESULTS:
| ../build/color_lut_docs_csCCwicB |
| ../build/color_lut_docs_csCCwicC |
| ../build/color_lut_docs_csCCwicG |
| ../build/color_lut_docs_csCCwicM |
| ../build/color_lut_docs_csCCwicR |
| ../build/color_lut_docs_csCCwicY |
